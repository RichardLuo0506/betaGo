{"version":3,"sources":["app.js","environment.js","main.js","goban/goban.js","resources/index.js","/home/richard/Dropbox (JBEI)/webspace/jobs/richard.luo/betaGo/src/app.html","/home/richard/Dropbox (JBEI)/webspace/jobs/richard.luo/betaGo/src/goban/goban.html"],"names":["App","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Goban","currentColor","board","createBoard","size","lastMovePassed","suicide","history","prisoners","white","black","i","j","stone","endGame","alert","getGroup","color","checked","checkedArray","queue","liberties","pop","neighbors","getNeighbors","self","each","key","val","state","push","length","stones","pass","switchPlayer","playMove","moku","group","k","v","prisoner","recordMove","boardSnapShot","move","console","log"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import $ from 'jquery';\n\nexport class Goban {\n\tconstructor() {\n\t\tthis.currentColor = 'black';\n\t\tthis.board = this.createBoard(19);\n\t\tthis.size = 19;\n\t\tthis.lastMovePassed = false;\n\t\tthis.suicide = false;\n\t\tthis.history = [];\n\t\tthis.prisoners = { white: 0, black: 0 };\n\t}\n\n\tcreateBoard(size) {\n\t\tlet board = [];\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tboard[i] = [];\n\t\t\tfor (let j = 0; j < size; j++) {\n\t\t\t\tboard[i][j] = { stone: 'empty', i: i, j: j };\n\t\t\t}\n\t\t}\n\t\treturn board;\n\t}\n\n\tendGame() {\n\t\talert('Game has ended');\n\t}\n\n\tgetGroup(i, j) {\n\t\tlet color = this.board[i][j].stone;\n\t\tlet checked = {};\n\t\tlet checkedArray = [];\n\t\tlet queue = [\n\t\t\t[i, j]\n\t\t];\n\t\tlet liberties = 0;\n\n\t\twhile (queue.length > 0) {\n\t\t\tlet stone = queue.pop();\n\t\t\tif (checked[stone]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet neighbors = this.getNeighbors(stone[0], stone[1]);\n\t\t\tlet self = this;\n\t\t\t$.each(neighbors, function(key, val) {\n\t\t\t\tlet state = self.board[val[0]][val[1]].stone;\n\t\t\t\tif (state === 'empty') {\n\t\t\t\t\tliberties++;\n\t\t\t\t} else if (state === color) {\n\t\t\t\t\tqueue.push([val[0], val[1]]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tchecked[stone] = true;\n\t\t\tcheckedArray.push(stone);\n\t\t}\n\t\treturn { liberties: liberties, stones: checkedArray };\n\t}\n\n\tgetNeighbors(i, j) {\n\t\tlet neighbors = [];\n\t\tif (i > 0)\n\t\t\tneighbors.push([i - 1, j]);\n\t\tif (j < this.size - 1)\n\t\t\tneighbors.push([i, j + 1]);\n\t\tif (i < this.size - 1)\n\t\t\tneighbors.push([i + 1, j]);\n\t\tif (j > 0)\n\t\t\tneighbors.push([i, j - 1]);\n\t\treturn neighbors;\n\t}\n\n\tpass() {\n\t\tif (this.lastMovePassed) {\n\t\t\tthis.endGame();\n\t\t} else {\n\t\t\tthis.lastMovePassed = true;\n\t\t\tthis.switchPlayer();\n\t\t}\n\t}\n\n\tplayMove(moku) {\n\t\tlet i = moku.i;\n\t\tlet j = moku.j;\n\t\tthis.suicide = false;\n\n\t\tif (this.board[i][j].stone !== 'empty') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet color = this.currentColor;\n\t\tthis.board[i][j].stone = color;\n\t\tlet prisoners = [];\n\t\tlet neighbors = this.getNeighbors(i, j);\n\t\tlet self = this;\n\n\t\t$.each(neighbors, function(key, val) {\n\t\t\tlet state = self.board[val[0]][val[1]].stone;\n\t\t\tif (state !== 'empty' && state !== color) {\n\t\t\t\tlet group = self.getGroup(val[0], val[1]);\n\t\t\t\tif (group['liberties'] === 0) {\n\t\t\t\t\tprisoners.push(group);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (!prisoners.length && this.getGroup(i, j)['liberties'] === 0) {\n\t\t\tthis.board[i][j].stone = 'empty';\n\t\t\tthis.suicide = true;\n\t\t\treturn false;\n\t\t}\n\n\t\t$.each(prisoners, function(key, val) {\n\t\t\t$.each(val.stones, function(k, v) {\n\t\t\t\tlet prisoner = self.board[v[0]][v[1]].stone;\n\t\t\t\tself.board[v[0]][v[1]].stone = 'empty';\n\t\t\t\tself.prisoners[prisoner]++;\n\t\t\t});\n\t\t});\n\n\t\tthis.lastMovePassed = false;\n\t\tthis.recordMove({ i: i, j: j, stone: color, boardSnapShot: this.board, prisoners: this.prisoners });\n\t\tthis.switchPlayer();\n\t}\n\n\trecordMove(move) {\n\t\tthis.history.push(move);\n\t\tconsole.log('', this.history);\n\t}\n\n\tswitchPlayer() {\n\t\tthis.currentColor = this.currentColor === 'black' ? 'white' : 'black';\n\t}\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null],"sourceRoot":"../src"}